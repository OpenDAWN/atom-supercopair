// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui
// for an example of what variables are available.
@import "ui-variables";

@bt-background:  fadeout(@tool-panel-background-color, 80%);
@bt-border-color: @base-border-color;
@vertical-padding: @component-line-height/4;

// @pane-item-border-color;
// fadeout(#eee, 70%);
// @base-background-color; // @pane-item-background-color;

.post-window {
  overflow-y: scroll;
  box-sizing: border-box;
  background: @tool-panel-background-color;
  color: @text-color;
  .scroll-view {
    min-height: 100%;
    &.post-window-editor {
      // I'm claiming its an .editor
      // for styling purposes
      // but user select needs to be turned back on
      // for native select + copy to work
      -webkit-user-select: inherit;
      -user-select: inherit;
    }
  }

  .clearfix {
    zoom:1;
    &:before, &:after{ content:""; display:table; }
    &:after{ clear: both; }
  }

  .lines {
    min-height: 100%;
    padding: @component-padding;
    width: 100%;
  }

  .pre {
    white-space: pre-wrap;
  }
  .stderr {
    color: @text-color-error;
  }

  font-size: @font-size + 2;
  font-family: @font-family;

  .state {
    font-weight: bold;
    font-size: 1.1em;
    // background: #888;
    border-bottom: 1px solid fadeout(@background-color-info, 40%);
    border-color: @panel-heading-border-color;
    // background: @panel-heading-background-color;
    // color: #fff;
    padding: 1px;
    margin:  @vertical-padding auto;
    // width: 100%;
    &.config {
      color: fadeout(@background-color-info, 40%);
      border-bottom: 1px solid fadeout(@background-color-info, 80%);
    }
    &.booting {
      color: fadeout(@background-color-info, 40%);
      border-bottom: 1px solid fadeout(@background-color-info, 80%);
    }
    &.ready {
      color: @background-color-success;
      border-bottom: 1px solid fadeout(@background-color-success, 80%);
    }
    &.compileError {
      color: fadeout(@background-color-error, 40%);
      border-bottom: 1px solid fadeout(@background-color-error, 80%);
    }
    &.dead {
      color: fadeout(@background-color-error, 40%);
      border-bottom: 1px solid fadeout(@background-color-error, 80%);
    }
    &.compiled,
    &.compiling,
    &.null {
      display: none;
    }
  }
  .in, .out, .error {
    // padding-left: 1em;
    border-left: 2px solid transparent;
  }

  .in {
    color: @text-color-info;
    // border-color: fadeout(@text-color-info, 80%);
  }
  .out {
  }
  .error {
    // color: desaturate(@text-color-error, 0%);
    // border-color: fadeout(@background-color-error, 60%);
    // padding-left: 1em;
    // margin: 1px 0;
    .title {
      strong {
        color: desaturate(@text-color-error, 10%);
        font-size: 1.1em;
        padding: @vertical-padding 0;
      }
      .time {
        float: right;
      }
    }
  }
  .error-label {
    color: @text-color-error;
  }
  .warning-label {
    color: @text-color-warning;
  }
  .time {
    color: fadeout(@text-color-subtle, 70%);
    font-size: 0.9em;
  }

  .error-Error,
  .error-SyntaxError,
  .error-ParseError {
    margin-top: @vertical-padding;
    // border: 1px solid fadeout(@background-color-error, 80%);
  }
  .object-vars {
    opacity: 0.8;
    margin-left: 1em;
    th {
      white-space: nowrap;
    }
  }
  .debug {
    clear: both;
    font-size: 11px;
  }

  .tr {
    display: table;
  }
  .th,
  .td {
    vertical-align: top;
    display: table-cell;
  }
  .th {
    width: 12em;
  }
  .config a {
    text-decoration: underline;
  }

  // backtrace
  .bt {
    margin: @vertical-padding 1em @vertical-padding 0;
    font-size: @font-size;

    // background: @bt-background;
    // box-shadow: inset 0px 0px 2px 0px fadeout(@bt-border-color, 80%);
    word-break: break-all;

    h5 {
      font-size: @font-size - 2;
      color: @text-color-subtle;
      margin: 2px;
      font-style: italic;
    }
    .source {
      background: lighten(@bt-background, 10%);
      // border: 1px solid fadeout(@inset-panel-border-color, 80%);
      box-shadow: inset 0px 0px 2px 0px fadeout(@bt-border-color, 80%);
      padding: @vertical-padding/2 1em;
      margin: @vertical-padding/2 0.5em;
      display: inline-block;
      min-width: 50%;
      font-size: 12px;
      word-break: normal;
      white-space: pre-wrap;
      overflow: auto;
    }
  }
  .bt-line {
    padding: @vertical-padding 0.5em;
    border-bottom: 1px solid fadeout(@text-color-subtle, 80%);
    &:hover {
      background: fadeout(desaturate(@ui-site-color-2, 80%), 98%);
      box-shadow: 0px 0px 2px 2px fadeout(@bt-border-color, 90%);

      .bt-link,
      .frame-address {
        color: @text-color-subtle;
      }
    }
    .tr,
    h5 {
      margin-left: 4px;
    }
  }
  .bt-name {
    font-weight: bold;
    font-size: 1.2em;
  }
  .bt-link {
    display: none;
    font-size: 9px;
    color: transparent;
  }
  .bt-line:last-child {
    border-bottom: 0;
  }
  .frame-address {
    font-size: 9px;
    color: transparent;
    display: none;
  }
}

// gutter


.post-window-editor .line {
  transition:  background-color, color .8s ease-out;
  -webkit-transition: background-color, color .8s ease-out;
  // &.line-green {
  //   background-color: @green-color;
  // }
  //
  // &.line-blue {
  //   background-color: @blue-color;
  // }

  &.line-error {
    background-color: fadeout(@background-color-error, 95%);
    border: 1px solid fadeout(@background-color-error, 50%);
  }
  &.line-highlight {
    background-color: @background-color-highlight;
  }

  &.eval-flash {
    color: @text-color-selected;
    background-color: @background-color-selected;
  }
  &.eval-success {
    color: @text-color-success;
    background-color: fadeout(@background-color-success, 50%);
  }
  &.eval-error,
  &.eval-syntax-error {
    color: @text-color-error;
    background-color: @background-color-error;
  }
}


// unfolding in the stack trace
.unfolder { display: none; }

.toggle-label {
	display: inline-block;
	cursor: pointer;
	font-size: 11px;
	// border-radius: 5px;
	// padding: 5px;
}
.unfold-icon,
.fold-icon {
  color: fadeout(@text-color-subtle, 50%);
  font-size: 9px;
  width: 6px;
  display: inline-block;

  &:hover {
    color: @text-color-subtle;
  }
}
.unfolder ~ .fold {
  display: none;
}
.unfolder ~ label .fold-icon {
  display: none;
}
.unfolder:checked ~ .fold {
  display: block;
}
.unfolder:checked ~ label .fold-icon {
  display: inline-block;
}
.unfolder:checked ~ label .unfold-icon {
  display: none;
}




// a hack for the syntax colors
// because most syntax themes do not
// specify a color for symbol
span.entity.name.symbol {
  color: #090;
}
